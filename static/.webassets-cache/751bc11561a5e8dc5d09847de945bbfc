VL.Control.Window = L.Control.extend({\u000a\u000a    includes: L.Mixin.Events,\u000a\u000a    options: {\u000a        element: 'map',\u000a        className: 'control-window',\u000a        visible: false,\u000a        title: undefined,\u000a        closeButton: true,\u000a        content: undefined,\u000a        prompt: undefined,\u000a        maxWidth: 600,\u000a        modal: false,\u000a        position: 'center'\u000a    },\u000a    initialize: function (container, options) {\u000a        var self = this;\u000a\u000a        if (container.hasOwnProperty('options')) {\u000a            container = container.getContainer();\u000a        }\u000a\u000a        options.element = container;\u000a        L.setOptions(this, options);\u000a\u000a        var modality = 'nonmodal';\u000a\u000a        if (this.options.modal) {\u000a            modality = 'modal';\u000a        }\u000a\u000a        // Create popup window container\u000a        this._wrapper = L.DomUtil.create('div', modality + ' leaflet-control-window-wrapper', L.DomUtil.get(this.options.element));\u000a\u000a        this._container = L.DomUtil.create('div', 'leaflet-control leaflet-control-window ' + this.options.className, this._wrapper);\u000a        this._container.setAttribute('style', 'max-width:' + this.options.maxWidth + 'px');\u000a\u000a        this._containerTitleBar = L.DomUtil.create('div', 'titlebar', this._container);\u000a        this.titleContent = L.DomUtil.create('h2', 'title', this._containerTitleBar);\u000a        this._containerContent = L.DomUtil.create('div', 'content', this._container);\u000a        this._containerPromptButtons = L.DomUtil.create('div', 'promptButtons', this._container);\u000a\u000a        if (this.options.closeButton) {\u000a            this._closeButton = L.DomUtil.create('a', 'close', this._containerTitleBar);\u000a            this._closeButton.innerHTML = '&times;';\u000a        }\u000a\u000a        // Make sure we don't drag the map when we interact with the content\u000a        var stop = L.DomEvent.stopPropagation;\u000a        L.DomEvent.on(this._wrapper, 'contextmenu', stop).on(this._wrapper, 'click', stop).on(this._wrapper, 'mousedown', stop).on(this._wrapper, 'touchstart', stop).on(this._wrapper, 'dblclick', stop).on(this._wrapper, 'mousewheel', stop).on(this._wrapper, 'MozMousePixelScroll', stop);\u000a\u000a        // Attach event to close button\u000a        if (this.options.closeButton) {\u000a            var close = this._closeButton;\u000a            L.DomEvent.on(close, 'click', this.hide, this);\u000a        }\u000a        if (this.options.title) {\u000a            this.title(this.options.title);\u000a        }\u000a        if (this.options.content) {\u000a            this.content(this.options.content);\u000a        }\u000a        if (typeof this.options.prompt == 'object') {\u000a            this.prompt(this.options.prompt);\u000a        }\u000a        if (this.options.visible) {\u000a            this.show();\u000a        }\u000a\u000a        //map.on('resize',function(){self.mapResized()});\u000a    },\u000a    disableBtn: function () {\u000a        this._btnOK.disabled = true;\u000a        this._btnOK.className = 'disabled';\u000a    },\u000a    enableBtn: function () {\u000a        this._btnOK.disabled = false;\u000a        this._btnOK.className = '';\u000a    },\u000a    title: function (titleContent) {\u000a        if (titleContent == undefined) {\u000a            return this.options.title;\u000a        }\u000a\u000a        this.options.title = titleContent;\u000a        var title = titleContent || '';\u000a        this.titleContent.innerHTML = title;\u000a        return this;\u000a    },\u000a    remove: function () {\u000a\u000a        L.DomUtil.get(this.options.element).removeChild(this._wrapper);\u000a\u000a        // Unregister events to prevent memory leak\u000a        var stop = L.DomEvent.stopPropagation;\u000a        L.DomEvent.off(this._wrapper, 'contextmenu', stop).off(this._wrapper, 'click', stop).off(this._wrapper, 'mousedown', stop).off(this._wrapper, 'touchstart', stop).off(this._wrapper, 'dblclick', stop).off(this._wrapper, 'mousewheel', stop).off(this._wrapper, 'MozMousePixelScroll', stop);\u000a\u000a        // map.off('resize',self.mapResized);\u000a\u000a        if (this._closeButton && this._close) {\u000a            var close = this._closeButton;\u000a            L.DomEvent.off(close, 'click', this.close, this);\u000a        }\u000a        return this;\u000a    },\u000a    mapResized: function () {\u000a        // this.show()\u000a    },\u000a    show: function (position) {\u000a\u000a        if (position) {\u000a            this.options.position = position;\u000a        }\u000a\u000a        L.DomUtil.addClass(this._wrapper, 'visible');\u000a\u000a        this.setContentMaxHeight();\u000a        var thisWidth = this._container.offsetWidth;\u000a        var thisHeight = this._container.offsetHeight;\u000a        var margin = 8;\u000a\u000a        var el = L.DomUtil.get(this.options.element);\u000a        var rect = el.getBoundingClientRect();\u000a        var width = rect.right - rect.left || Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\u000a        var height = rect.bottom - rect.top || Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\u000a\u000a        var top = rect.top;\u000a        var left = rect.left;\u000a        var offset = 0;\u000a\u000a        // SET POSITION OF WINDOW\u000a        if (this.options.position == 'topLeft') {\u000a            this.showOn([left, top + offset]);\u000a        } else if (this.options.position == 'left') {\u000a            this.showOn([left, top + height / 2 - thisHeight / 2 - margin + offset]);\u000a        } else if (this.options.position == 'bottomLeft') {\u000a            this.showOn([left, top + height - thisHeight - margin * 2 - offset]);\u000a        } else if (this.options.position == 'top') {\u000a            this.showOn([left + width / 2 - thisWidth / 2 - margin, top + offset]);\u000a        } else if (this.options.position == 'topRight') {\u000a            this.showOn([left + width - thisWidth - margin * 2, top + offset]);\u000a        } else if (this.options.position == 'right') {\u000a            this.showOn([left + width - thisWidth - margin * 2, top + height / 2 - thisHeight / 2 - margin + offset]);\u000a        } else if (this.options.position == 'bottomRight') {\u000a            this.showOn([left + width - thisWidth - margin * 2, top + height - thisHeight - margin * 2 - offset]);\u000a        } else if (this.options.position == 'bottom') {\u000a            this.showOn([left + width / 2 - thisWidth / 2 - margin, top + height - thisHeight - margin * 2 - offset]);\u000a        } else {\u000a            this.showOn([left + width / 2 - thisWidth / 2 - margin, top + top + height / 2 - thisHeight / 2 - margin + offset]);\u000a        }\u000a\u000a        return this;\u000a    },\u000a    showOn: function (point) {\u000a\u000a        this.setContentMaxHeight();\u000a        L.DomUtil.setPosition(this._container, L.point(Math.round(point[0]), Math.round(point[1]), true));\u000a\u000a        var draggable = new L.Draggable(this._container, this._containerTitleBar);\u000a        draggable.enable();\u000a\u000a        L.DomUtil.addClass(this._wrapper, 'visible');\u000a        this.fire('show');\u000a        return this;\u000a    },\u000a    hide: function (e) {\u000a\u000a        L.DomUtil.removeClass(this._wrapper, 'visible');\u000a        this.fire('hide');\u000a        return this;\u000a    },\u000a\u000a    getContainer: function () {\u000a        return this._containerContent;\u000a    },\u000a    content: function (content) {\u000a        if (content == undefined) {\u000a            return this.options.content;\u000a        }\u000a        this.options.content = content;\u000a        this.getContainer().innerHTML = content;\u000a        return this;\u000a    },\u000a    prompt: function (promptObject) {\u000a\u000a        if (promptObject == undefined) {\u000a            return this.options.prompt;\u000a        }\u000a\u000a        this.options.prompt = promptObject;\u000a\u000a        this.setPromptCallback(promptObject.callback);\u000a\u000a        this.setActionCallback(promptObject.action);\u000a\u000a        var cancel = this.options.prompt.buttonCancel || 'CANCEL';\u000a\u000a        var ok = this.options.prompt.buttonOK || 'OK';\u000a\u000a        var action = this.options.prompt.buttonAction || undefined;\u000a\u000a        if (action != undefined) {\u000a            var btnAction = L.DomUtil.create('button', '', this._containerPromptButtons);\u000a            L.DomEvent.on(btnAction, 'click', this.action, this);\u000a            btnAction.innerHTML = action;\u000a        }\u000a\u000a        var btnOK = L.DomUtil.create('button', '', this._containerPromptButtons);\u000a        L.DomEvent.on(btnOK, 'click', this.promptCallback, this);\u000a        btnOK.innerHTML = ok;\u000a\u000a        this._btnOK = btnOK;\u000a\u000a        var btnCancel = L.DomUtil.create('button', '', this._containerPromptButtons);\u000a        L.DomEvent.on(btnCancel, 'click', this.close, this);\u000a        btnCancel.innerHTML = cancel;\u000a\u000a        return this;\u000a    },\u000a    container: function (containerContent) {\u000a        if (containerContent == undefined) {\u000a            return this._container.innerHTML;\u000a        }\u000a\u000a        this._container.innerHTML = containerContent;\u000a\u000a        if (this.options.closeButton) {\u000a            this._closeButton = L.DomUtil.create('a', 'close', this._container);\u000a            this._closeButton.innerHTML = '&times;';\u000a            L.DomEvent.on(this._closeButton, 'click', this.close, this);\u000a        }\u000a        return this;\u000a    },\u000a    setPromptCallback: function (callback) {\u000a        var self = this;\u000a        if (typeof callback != 'function') {\u000a            callback = function () {\u000a                console.warn('No callback function specified!');\u000a            };\u000a        }\u000a        var cb = function () {\u000a            self.close();callback();\u000a        };\u000a        this.promptCallback = cb;\u000a        return this;\u000a    },\u000a    setActionCallback: function (callback) {\u000a        var self = this;\u000a        if (typeof callback != 'function') {\u000a            callback = function () {\u000a                console.warn('No callback function specified!');\u000a            };\u000a        }\u000a        var cb = function () {\u000a            self.hide();callback();\u000a        };\u000a        this.action = cb;\u000a        return this;\u000a    },\u000a\u000a    setContentMaxHeight: function () {\u000a        var margin = 68;\u000a\u000a        if (this.options.title) {\u000a            margin += this._containerTitleBar.offsetHeight - 36;\u000a        }\u000a        if (typeof this.options.prompt == 'object') {\u000a            margin += this._containerPromptButtons.offsetHeight - 20;\u000a        }\u000a\u000a        var el = L.DomUtil.get(this.options.element);\u000a        var rect = el.getBoundingClientRect();\u000a        var height = rect.bottom - rect.top;\u000a\u000a        var maxHeight = height - margin;\u000a        this._containerContent.setAttribute('style', 'max-height:' + maxHeight + 'px');\u000a    },\u000a    close: function () {\u000a        this.hide();\u000a        this.remove();\u000a        this.fire('close');\u000a        return undefined;\u000a    }\u000a});\u000a\u000aL.control.window = function (container, options) {\u000a    return new L.Control.Window(container, options);\u000a};\u000a\u000a
p1
.